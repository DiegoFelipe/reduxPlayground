{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteList.module.css","hooks/use-http.js","lib/api.js","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","index.js"],"names":["module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","QuoteItem","props","className","classes","item","text","author","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAsc","useRouteMatch","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathName","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","children","NewQuote","React","lazy","QuoteDetails","NotFound","App","fallback","path","exact","ReactDOM","createRoot","document","getElementById","render"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,+B,qBCAzID,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2B,2ECC3D,SAASC,EAAYC,EAAOC,GAC1B,MAAoB,SAAhBA,EAAOC,KACF,CACLC,KAAM,KACNC,MAAO,KACPC,OAAQ,WAIQ,YAAhBJ,EAAOC,KACF,CACLC,KAAMF,EAAOK,aACbF,MAAO,KACPC,OAAQ,aAIQ,UAAhBJ,EAAOC,KACF,CACLC,KAAM,KACNC,MAAOH,EAAOM,aACdF,OAAQ,aAILL,CACR,CA+BcQ,IA7Bf,SAAiBC,GAA4C,IAA3BC,EAA0B,wDAC1D,EAA8BC,qBAAWZ,EAAa,CACpDM,OAAQK,EAAmB,UAAY,KACvCP,KAAM,KACNC,MAAO,OAHT,mBAAOQ,EAAP,KAAkBC,EAAlB,KAMMC,EAAcC,sBAAW,iDAC7B,WAAgBC,GAAhB,wFACEH,EAAS,CAAEX,KAAM,SADnB,kBAG+BO,EAAgBO,GAH/C,OAGUV,EAHV,OAIIO,EAAS,CAAEX,KAAM,UAAWI,iBAJhC,gDAMIO,EAAS,CACPX,KAAM,QACNK,aAAc,KAAMU,SAAW,0BARrC,yDAD6B,sDAa7B,CAACR,IAGH,OAAO,aACLK,eACGF,EAEN,C,kKCzDKM,EACJ,0DAEK,SAAeC,IAAtB,+B,sDAAO,sHACkBC,MAAM,GAAD,OAAIF,EAAJ,iBADvB,cACCG,EADD,gBAEcA,EAASC,OAFvB,UAECnB,EAFD,OAIAkB,EAASE,GAJT,sBAKG,IAAIC,MAAMrB,EAAKc,SAAW,2BAL7B,OAUL,IAAWQ,KAFLC,EAAoB,GAERvB,EACVwB,EADgB,aAEpBC,GAAIH,GACDtB,EAAKsB,IAGVC,EAAkBG,KAAKF,GAhBpB,yBAmBED,GAnBF,6C,sBAsBA,SAAeI,EAAtB,kC,sDAAO,WAA8BC,GAA9B,qGACkBX,MAAM,GAAD,OAAIF,EAAJ,mBAA8Ba,EAA9B,UADvB,cACCV,EADD,gBAEcA,EAASC,OAFvB,UAECnB,EAFD,OAIAkB,EAASE,GAJT,sBAKG,IAAIC,MAAMrB,EAAKc,SAAW,0BAL7B,cAQCe,EARD,aASHJ,GAAIG,GACD5B,GAVA,kBAaE6B,GAbF,6C,sBAgBA,SAAeC,EAAtB,kC,sDAAO,WAAwBC,GAAxB,mGACkBd,MAAM,GAAD,OAAIF,EAAJ,gBAAmC,CAC7DiB,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBALf,cACClB,EADD,gBAQcA,EAASC,OARvB,UAQCnB,EARD,OAUAkB,EAASE,GAVT,sBAWG,IAAIC,MAAMrB,EAAKc,SAAW,2BAX7B,gCAcE,MAdF,4C,2CCxCPpB,EAAOC,QAAU,CAAC,KAAO,wB,qBCAzBD,EAAOC,QAAU,CAAC,SAAW,gC,qBCA7BD,EAAOC,QAAU,CAAC,KAAO,qB,iJCkBV0C,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMb,IAA3C,+BAKL,E,iBCqCcoB,EAtCG,SAACP,GACjB,IAXkBQ,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAKXC,GAJQC,cAIkC,QAF7B,IAAIC,gBAAgBJ,EAASK,QAEhBC,IAAI,SAC9BC,GAlBYX,EAkBcR,EAAMQ,OAlBZC,EAkBoBK,EAjBvCN,EAAOY,MAAK,SAACC,EAAQC,GAC1B,OAAIb,EACKY,EAAOlC,GAAKmC,EAAOnC,GAAK,GAAK,EAE7BkC,EAAOlC,GAAKmC,EAAOnC,GAAK,GAAK,CAEvC,KAoBD,OACE,eAAC,WAAD,WACE,qBAAKc,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QAVK,WACjBd,EAAQtB,KAAK,CACXqC,SAAUb,EAASc,SACnBT,OAAO,SAAD,OAAWH,EAAe,OAAS,QAG5C,EAIK,kBACQA,EAAe,aAAe,iBAGxC,oBAAIb,UAAWC,IAAQyB,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEE1C,GAAI0C,EAAM1C,GACVkB,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAM1C,GAFG,QAWzB,E,iCCzCc2C,EATO,WACpB,OACE,sBAAK7B,UAAWC,IAAQ6B,SAAxB,UACE,iDACA,mBAAG9B,UAAU,MAAb,2BAGL,ECuBc+B,EA1BG,WAChB,MAKIjE,YAAQW,KAAc,GAJxBL,EADF,EACEA,YACAT,EAFF,EAEEA,OACMqE,EAHR,EAGEvE,KACAC,EAJF,EAIEA,MAOF,OAJAuE,qBAAU,WACR7D,GACD,GAAE,CAACA,IAEW,YAAXT,EACK,wCAELD,EACK,qDAGM,cAAXC,GAA4BqE,GAAwC,IAAxBA,EAAaE,OAItD,cAAC,EAAD,CAAW3B,OAAQyB,IAHjB,cAAC,EAAD,GAIV,E,kCCJcG,EAtBQ,WACrB,OACE,yBAAQnC,UAAWC,IAAQmC,OAA3B,UACE,qBAAKpC,UAAWC,IAAQoC,KAAxB,0BACA,qBAAKrC,UAAWC,IAAQqC,IAAxB,SACE,+BACE,6BACE,cAAC,IAAD,CAASjC,GAAG,UAAUkC,gBAAiBtC,IAAQuC,OAA/C,0BAIF,6BACE,cAAC,IAAD,CAASnC,GAAG,aAAakC,gBAAiBtC,IAAQuC,OAAlD,kCAQX,ECVcC,EATA,SAAC1C,GACd,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,sBAAMC,UAAWC,IAAQyC,KAAzB,SAAgC3C,EAAM4C,aAG3C,ECPKC,EAAWC,IAAMC,MAAK,kBAAM,4BAAN,IACtBC,EAAeF,IAAMC,MAAK,kBAAM,4BAAN,IAC1BE,EAAWH,IAAMC,MAAK,kBAAM,4BAAN,IA4BbG,MA1Bf,WACE,OACE,cAAC,EAAD,UACE,cAAC,WAAD,CAAUC,SAAU,wCAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAU/C,GAAG,cAEf,cAAC,IAAD,CAAO8C,KAAK,UAAUC,OAAK,EAA3B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACE,cAACJ,EAAD,MAEF,cAAC,IAAD,CAAOI,KAAK,aAAZ,SACE,cAACP,EAAD,MAEF,cAAC,IAAD,CAAOO,KAAK,IAAZ,SACE,cAACH,EAAD,YAMX,EC3BYK,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.01dc62df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN =\n  \"https://react-course-cfb94-default-rtdb.firebaseio.com/\";\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const queryParms = new URLSearchParams(location.search);\n\n  const isSortingAsc = queryParms.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAsc);\n\n  const changeSort = () => {\n    history.push({\n      pathName: location.pathname,\n      search: `?sort=${isSortingAsc ? \"desc\" : \"asc\"}`,\n    });\n    // history.push(`${location.pathname}?sort=${isSortingAsc ? \"desc\" : \"asc\"}`);\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSort}>\n          Sort {isSortingAsc ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <a className=\"btn\">Add a Quote</a>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return <p>Loading</p>;\n  }\n  if (error) {\n    return <p>Something went wrong</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import { NavLink } from \"react-router-dom\";\n\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react\";\n\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React, { Suspense } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport Layout from \"./components/layout/Layout\";\n\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\nconst QuoteDetails = React.lazy(() => import(\"./pages/QuoteDetails\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\n\nfunction App() {\n  return (\n    <Layout>\n      <Suspense fallback={<p>Loading</p>}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetails />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}