{"version":3,"sources":["components/UI/LoadingSpinner.js","components/UI/LoadingSpinner.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","pages/QuoteDetails.js"],"names":["LoadingSpinner","className","classes","spinner","module","exports","HighlightedQuote","props","quote","text","author","NewCommentForm","commentTextRef","useRef","submitFormHandler","event","preventDefault","form","onSubmit","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","QuoteDetail","match","useRouteMatch","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuote","data","error","useEffect","path","exact","to","url"],"mappings":"mIAAA,4BAMeA,IAJQ,WACrB,OAAO,qBAAKC,UAAWC,IAAQC,SAChC,C,qBCHDC,EAAOC,QAAU,CAAC,QAAU,gC,qBCA5BD,EAAOC,QAAU,CAAC,MAAQ,gC,qBCA1BD,EAAOC,QAAU,CAAC,SAAW,2B,qBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,gC,0FCUrIC,EATU,SAACC,GACxB,OACE,yBAAQN,UAAWC,IAAQM,MAA3B,UACE,4BAAID,EAAME,OACV,qCAAaF,EAAMG,WAGxB,E,0CCmBcC,EAxBQ,SAACJ,GACtB,IAAMK,EAAiBC,mBAEjBC,EAAoB,SAACC,GACzBA,EAAMC,gBAKP,EAED,OACE,uBAAMf,UAAWC,IAAQe,KAAMC,SAAUJ,EAAzC,UACE,sBAAKb,UAAWC,IAAQiB,QAASD,SAAUJ,EAA3C,UACE,uBAAOM,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAKX,OAEvC,qBAAKX,UAAWC,IAAQsB,QAAxB,SACE,wBAAQvB,UAAU,MAAlB,6BAIP,ECAcwB,EArBE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,OACE,0BAAS3B,UAAWC,IAAQ2B,SAA5B,UACE,gDACEF,GACA,wBAAQ1B,UAAU,MAAM6B,QARC,WAC7BF,GAAmB,EACpB,EAMK,2BAIDD,GAAmB,cAAC,EAAD,IACpB,8CAGL,E,wBCmCcI,UAlDK,WAClB,IAAMC,EAAQC,cAGNC,EAFOC,cAEPD,QAER,EAKIE,YAAQC,KAAgB,GAJ1BC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAOF,OAJAC,qBAAU,WACRL,EAAYJ,EACb,GAAE,CAACI,EAAaJ,IAEF,YAAXK,EAEA,qBAAKtC,UAAU,WAAf,SACE,cAACD,EAAA,EAAD,MAKF0C,EACK,mBAAGzC,UAAU,WAAb,SAAyByC,IAG7BF,EAAY/B,KAKf,eAAC,WAAD,WACE,cAAC,EAAD,CAAkBA,KAAM+B,EAAY/B,KAAMC,OAAQ8B,EAAY9B,SAC9D,cAAC,IAAD,CAAOkC,KAAMZ,EAAMY,KAAMC,OAAK,EAA9B,SACE,qBAAK5C,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAY6C,GAAE,UAAKd,EAAMe,IAAX,aAA9B,+BAKJ,cAAC,IAAD,CAAOH,KAAI,UAAKZ,EAAMY,KAAX,aAAX,SACE,cAAC,EAAD,SAdG,+CAkBV,C","file":"static/js/3.1d1f9782.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment, useEffect } from \"react\";\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  if (!loadedQuote.text) {\n    return <p>No quote found!</p>;\n  }\n\n  return (\n    <Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"sourceRoot":""}